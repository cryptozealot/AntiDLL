
name: build

on:
  push:
    paths-ignore:
    - LICENSE
    - README.md
  pull_request:
    paths-ignore:
    - LICENSE
    - README.md

jobs:
  build:
    name: build with sm${{ matrix.sm_version }} on ${{ matrix.os_short }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

        sm_version:
          - "1.11"

        include:
          - sm_version: "1.11"
            branch: "1.11-dev"

          - os: ubuntu-latest
            os_short: linux


    steps:
      - name: Prepare env
        shell: bash
        run: |
          echo "GITHUB_SHA_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          
      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y clang g++-multilib
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          
      - name: Setup SP
        if: runner.os == 'Linux'
        uses: rumblefrog/setup-sp@master
        with:
          version: '1.11.x'
          
      - name: Checking out SourceMod
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.branch }}
          path: sourcemod-${{ matrix.sm_version }}
          submodules: recursive

      - name: Checking out MM:Source
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/metamod-source
          ref: ${{ matrix.branch }}
          path: metamod-${{ matrix.sm_version }}

      - name: Checking out AMBuild
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/ambuild
          path: ambuild

      - name: Setting up Python
        uses: actions/setup-python@v2

      - name: Setting up ambuild
        working-directory: ambuild
        run: python setup.py install

      - name: Checking out hl2sdk-css
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/hl2sdk
          ref: css
          path: hl2sdk-css

      - name: Checking out hl2sdk-csgo
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/hl2sdk
          ref: csgo
          path: hl2sdk-csgo

      - name: Checking out hl2sdk-episode1
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/hl2sdk
          ref: episode1
          path: hl2sdk-episode1

      - name: Checking out own repository
        uses: actions/checkout@v2
        with:
          path: AntiDLL

      - name: Compiling AntiDLL plugin
        if: runner.os == 'Linux'
        working-directory: AntiDLL
        run: |
          mkdir plugins
          spcomp scripting/AntiDLL.sp -i=scripting/include -o=plugins/AntiDLL.smx

      - name: Compiling AntiDLL files
        working-directory: AntiDLL
        run: |
          mkdir build
          cd build
          python ../configure.py --enable-optimize --sm-path="${{ github.workspace }}/sourcemod-${{ matrix.sm_version }}" --mms-path="${{ github.workspace }}/metamod-${{ matrix.sm_version }}"
          ambuild
          
      - name: Uploading package
        uses: actions/upload-artifact@v2
        with:
          name: AntiDLL-sm${{ matrix.sm_version }}-${{ matrix.os_short }}-${{ env.GITHUB_SHA_SHORT }}
          path: AntiDLL/build/package
